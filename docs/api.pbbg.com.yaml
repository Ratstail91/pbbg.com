---
openapi: "3.0.0"
info:
  title: "The PBBG API"
  description: "The API for Persistent Browser-Based Games."
  version: "0.1.4"
externalDocs:
  description: "Find out more about this project"
  url: "https://github.com/pbbg"
servers:
  - url: "https://virtserver.swaggerhub.com/pbbg/api.pbbg.com/0.1.4"
    description: "SwaggerHub API Auto Mocking"
  - url: "https://dev-api.pbbg.com"
    description: "Development API"
paths:
  /register:
    post:
      tags:
        - "Users"
      summary: "Create user"
      operationId: "createUser"
      requestBody:
        description: "Created user object"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: "string"
                  example: "Foo Bar"
                email:
                  type: "string"
                  example: "foo@bar.baz"
                password:
                  type: "string"
        required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      token:
                        type: "string"
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5MWI1Y2RmMS00NTE4LTRjMzMtYjlkNy0xNDAwMTkwNTM3ODUiLCJqdGkiOiJjMWNhNWQ4YzAzOTQ2YmIzY2RmMWU2NzlmMjFmZjY2MTI4ZmY1MmI3NTY1OTQ0OWQwNDNmNDUwY2I3Y2M4NjZlMTQyODI4NTNiNDM5MDdjMiIsImlhdCI6MTYwMjE5NzMzMiwibmJmIjoxNjAyMTk3MzMyLCJleHAiOjE2MzM3MzMzMzEsInN1YiI6IjciLCJzY29wZXMiOltdfQ.ePVG1LhNJOnnyC6atj7uT5q4mJ4iJKOLL9rsEKDh4vmvs-6sdGnOjEImYYHK6Zrh9vmfUdBUobABQW3Abmd92bjHufJVvICetYqCZKhzbTupHwm2uSwZIj0zmGSpZWMiaXs0EgNC5igQud-o8FGvuipH29oJzRUjTpqr29y6YrwOTNUy6VzybeT_sRxffliS7tQiHO3r0pBRMp2QsVs06MNIxwoKdIrLCVCYRdFO5W4qHzQJxVMsCDiEDgkdiLBkDSTdnUQqVds6xUGaX45aDpLWizju24jGPugTBvfqid_MrgjwfD7a8FMhvNePQLK3JEXcbkrYF3Sik77IPEQZiuVdziUPY6AIInewBmtY6-T60gSC0cIh8F2ejVHCon_xJPH4pRZOgfL2zdBys1c-2lxqxVV_FR8GiLYEY6HpXoip6zOCNHfZ7pO_w1YzcJv1YE9YUvIeVLXB4hXDJPKhigGp0ZscQDN_ZFWK3voYnDl-uGzRvdwl6y04g_G-WzL2oy8aXKC9gfHT_RlVGG8JcsUcFvdbLFRbLPGN8HmblNO2vjI5I2w4lGA_bSxtHZBxwVDuXcZwarg02HictptRWG7BCUD0UCyFRtQAYhLqOktoaUpISbmz92fCsv1JsgAlCpl6Uwk2J2U_iyKpRwZzj1bq9TA_LnvT3_Lh6RKJV6M"
        "422":
          description: "invalid submission"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "The given data was invalid."
                  errors:
                    type: "object"
                    properties:
                      name:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
                      email:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
                      password:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
  /login:
    post:
      tags:
        - "Users"
      summary: "Authenticate user"
      operationId: "authenticateUser"
      requestBody:
        description: "Authenticate user"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: "string"
                  example: "foo@bar.baz"
                password:
                  type: "string"
        required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "object"
                    properties:
                      token:
                        type: "string"
                        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5MWI1Y2RmMS00NTE4LTRjMzMtYjlkNy0xNDAwMTkwNTM3ODUiLCJqdGkiOiJjMWNhNWQ4YzAzOTQ2YmIzY2RmMWU2NzlmMjFmZjY2MTI4ZmY1MmI3NTY1OTQ0OWQwNDNmNDUwY2I3Y2M4NjZlMTQyODI4NTNiNDM5MDdjMiIsImlhdCI6MTYwMjE5NzMzMiwibmJmIjoxNjAyMTk3MzMyLCJleHAiOjE2MzM3MzMzMzEsInN1YiI6IjciLCJzY29wZXMiOltdfQ.ePVG1LhNJOnnyC6atj7uT5q4mJ4iJKOLL9rsEKDh4vmvs-6sdGnOjEImYYHK6Zrh9vmfUdBUobABQW3Abmd92bjHufJVvICetYqCZKhzbTupHwm2uSwZIj0zmGSpZWMiaXs0EgNC5igQud-o8FGvuipH29oJzRUjTpqr29y6YrwOTNUy6VzybeT_sRxffliS7tQiHO3r0pBRMp2QsVs06MNIxwoKdIrLCVCYRdFO5W4qHzQJxVMsCDiEDgkdiLBkDSTdnUQqVds6xUGaX45aDpLWizju24jGPugTBvfqid_MrgjwfD7a8FMhvNePQLK3JEXcbkrYF3Sik77IPEQZiuVdziUPY6AIInewBmtY6-T60gSC0cIh8F2ejVHCon_xJPH4pRZOgfL2zdBys1c-2lxqxVV_FR8GiLYEY6HpXoip6zOCNHfZ7pO_w1YzcJv1YE9YUvIeVLXB4hXDJPKhigGp0ZscQDN_ZFWK3voYnDl-uGzRvdwl6y04g_G-WzL2oy8aXKC9gfHT_RlVGG8JcsUcFvdbLFRbLPGN8HmblNO2vjI5I2w4lGA_bSxtHZBxwVDuXcZwarg02HictptRWG7BCUD0UCyFRtQAYhLqOktoaUpISbmz92fCsv1JsgAlCpl6Uwk2J2U_iyKpRwZzj1bq9TA_LnvT3_Lh6RKJV6M"
        "401":
          description: "authentication failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedResponse"
        "422":
          description: "invalid submission"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "The given data was invalid."
                  errors:
                    type: "object"
                    properties:
                      email:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
                      password:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
  /users:
    get:
      tags:
        - "Users"
      summary: "Get users"
      operationId: "getUsers"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/User"
                  links:
                    type: "object"
                    properties:
                      first:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users?page=1"
                      last:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users?page=1"
                      prev:
                        type: "string"
                      next:
                        type: "string"
                  meta:
                    type: "object"
                    properties:
                      current_page:
                        type: "number"
                        example: 1
                      from:
                        type: "number"
                        example: 1
                      last_page:
                        type: "number"
                        example: 1
                      links:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            url:
                              type: "string"
                            label:
                              type: "string"
                              example: "Previous"
                            active:
                              type: "boolean"
                              example: false
                      path:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users"
                      per_page:
                        type: "number"
                        example: 15
                      to:
                        type: "number"
                        example: 1
                      total:
                        type: "number"
                        example: 1
    delete:
      tags:
        - "Users"
      summary: "Delete users"
      description: "This deletes all users."
      operationId: "deleteUsers"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/User"
                    example: []
                  links:
                    type: "object"
                    properties:
                      first:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users?page=1"
                      last:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users?page=1"
                      prev:
                        type: "string"
                      next:
                        type: "string"
                  meta:
                    type: "object"
                    properties:
                      current_page:
                        type: "number"
                        example: 1
                      from:
                        type: "number"
                        example: 1
                      last_page:
                        type: "number"
                        example: 1
                      links:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            url:
                              type: "string"
                            label:
                              type: "string"
                              example: "Previous"
                            active:
                              type: "boolean"
                              example: false
                      path:
                        type: "string"
                        example: "https://dev-api.pbbg.com/users"
                      per_page:
                        type: "number"
                        example: 15
                      to:
                        type: "number"
                        example: 1
                      total:
                        type: "number"
                        example: 1
  /users/{userId}:
    get:
      tags:
        - "Users"
      operationId: "getUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          style: "simple"
          explode: false
          schema:
            type: "string"
      responses:
        "200":
          description: "response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    $ref: "#/components/schemas/User"
  /user:
    get:
      tags:
        - "Users"
      operationId: "getAuthenticatedUser"
      responses:
        "200":
          description: "response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    $ref: "#/components/schemas/AuthenticatedUser"
        "401":
          description: "authentication failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedResponse"
      security:
        - bearerAuth: []
  /games:
    get:
      tags:
        - "Games"
      summary: "Get games"
      operationId: "getGames"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Game"
                  links:
                    type: "object"
                    properties:
                      first:
                        type: "string"
                        example: "https://dev-api.pbbg.com/games?page=1"
                      last:
                        type: "string"
                        example: "https://dev-api.pbbg.com/games?page=1"
                      prev:
                        type: "string"
                      next:
                        type: "string"
                  meta:
                    type: "object"
                    properties:
                      current_page:
                        type: "number"
                        example: 1
                      from:
                        type: "number"
                        example: 1
                      last_page:
                        type: "number"
                        example: 1
                      links:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            url:
                              type: "string"
                            label:
                              type: "string"
                              example: "Previous"
                            active:
                              type: "boolean"
                              example: false
                      path:
                        type: "string"
                        example: "https://dev-api.pbbg.com/games"
                      per_page:
                        type: "number"
                        example: 15
                      to:
                        type: "number"
                        example: 1
                      total:
                        type: "number"
                        example: 1
    post:
      tags:
        - "Games"
      summary: "Create game"
      operationId: "createGame"
      requestBody:
        description: "Created game object"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                url:
                  type: "string"
                  example: "https://example.com"
                name:
                  type: "string"
                  example: "Example Game"
                tags:
                  type: "array"
                  items:
                    type: "string"
                    example: "example tag"
                short_description:
                  type: "string"
        required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    $ref: "#/components/schemas/Game"
        "422":
          description: "invalid submission"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "The given data was invalid."
                  errors:
                    type: "object"
                    properties:
                      url:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
                      name:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
                      short_description:
                        type: "array"
                        items:
                          type: "string"
                          example: "Example error message."
  /games/{gameId}:
    get:
      tags:
        - "Games"
      operationId: "getGame"
      parameters:
        - name: "gameId"
          in: "path"
          required: true
          style: "simple"
          explode: false
          schema:
            type: "string"
      responses:
        "200":
          description: "response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    $ref: "#/components/schemas/Game"
components:
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "number"
          example: 1
        name:
          type: "string"
          example: "Foo Bar"
        created_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
        updated_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
    Game:
      type: "object"
      properties:
        id:
          type: "number"
          example: 1
        owner:
          type: "object"
          properties:
            id:
              type: "number"
              example: 1
        name:
          type: "string"
          example: "Foo Bar"
        slug:
          type: "string"
          example: "foo-bar"
        tags:
          type: "array"
          items:
            type: "string"
            example: "example tag"
        url:
          type: "string"
          example: "https://example.com"
        short_description:
          type: "string"
        long_description:
          type: "string"
        image_path:
          type: "string"
          example: "/path/to/image.jpg"
        approved:
          type: "number"
          example: 1
        verified:
          type: "number"
          example: 1
        promoted:
          type: "number"
          example: 1
        created_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
        updated_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
    AuthenticatedUser:
      type: "object"
      properties:
        id:
          type: "number"
          example: 1
        name:
          type: "string"
          example: "Foo Bar"
        email:
          type: "string"
          example: "foo@bar.baz"
        email_verified_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
        created_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
        updated_at:
          type: "string"
          example: "2020-10-07T16:46:15.000000Z"
    UnauthenticatedResponse:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Unauthorized"
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
